initSidebarItems({"enum":[["Endianness",""],["FromSignedness",""],["HashTable_FailureBehavior",""],["HashTable_LookupReason",""],["HashTable_RebuildStatus",""],["PackingStrategy",""],["StorageType",""],["ToSignedness",""],["USComparison",""],["UUComparison",""],["Voidness",""]],"struct":[["AbsReturnType",""],["AbsReturnTypeFixed",""],["AlignasHelper",""],["AlignedChecker",""],["AllowDeprecatedAbs",""],["AllowDeprecatedAbsFixed",""],["AsVariantTemporary","AsVariantTemporary stores a value of type T to allow construction of a Variant value via type inference. Because T is copied and there's no guarantee that the copy can be elided, AsVariantTemporary is best used with primitive or very small types."],["AssertionConditionType",""],["BaseOfTester",""],["CheckConvertibility",""],["ConvertibleTester",""],["CorrespondingSigned",""],["CorrespondingUnsigned",""],["DoIsDefaultConstructibleImpl",""],["DoIsDestructibleImpl",""],["EndianUtils",""],["EntrySlot",""],["FloatingPointTrait",""],["FunctionTypeTraitsHelper",""],["FuzzyEqualsEpsilon",""],["Group",""],["GuardObjectNotificationReceiver",""],["GuardObjectNotifier",""],["HasFreeLSB",""],["HasPointerType",""],["HasPointerTypeHelper",""],["HashTable",""],["HashTableEntry",""],["HashTable_AddPtr",""],["HashTable_DoubleHash",""],["HashTable_Enum",""],["HashTable_FakeSlot",""],["HashTable_Iterator",""],["HashTable_ModIterator",""],["HashTable_Ptr",""],["HashTable_Range",""],["IsArrayHelper",""],["IsClassHelper",""],["IsDefaultConstructibleImpl",""],["IsDestructibleImpl",""],["IsEmptyHelper",""],["IsEnumHelper",""],["IsFloatingPointHelper",""],["IsFunPtr",""],["IsIntegralHelper",""],["IsMemberPointerHelper",""],["IsPackableVariant",""],["IsPackableVariant_EVbool",""],["IsPackableVariant_VEbool",""],["IsPointerHelper",""],["IsResult",""],["IsVoidHelper",""],["IteratorRange",""],["LinkedListElementTraits","LinkedList supports refcounted elements using this adapter class. Clients using LinkedList<RefPtr> will get a data structure that holds a strong reference to T as long as T is in the list."],["MakeUnsignedChar",""],["MaybePoisoner",""],["PointerType",""],["RemovePointerHelper",""],["SelectResultImpl",""],["SelectVariantType","SelectVariantType takes a type T and a list of variant types Variants and yields a type Type, selected from Variants, that can store a value of type T or a reference to type T. If no such type was found, Type is not defined. SelectVariantType also has a `count` member that contains the total number of selectable types (which will be used to check that a requested type is not ambiguously present twice.)"],["SelectVariantTypeHelper","SelectVariantTypeHelper is used in the implementation of SelectVariantType."],["ToStorageTypeArgument",""],["UniqueSelector",""],["UnusedZero",""],["VariantTag",""],["VectorTesting",""],["WrapToSignedHelper",""],["WrappingAddHelper",""],["WrappingMultiplyHelper",""],["WrappingSubtractHelper",""]],"type":[["AssertionConditionType_ValueT",""],["AtomicBaseIncDec_Base",""],["AtomicBase_Intrinsics",""],["AtomicBase_ValueType",""],["AtomicIntrinsics_Base",""],["EndianReadWrite_super",""],["EntrySlot_Entry",""],["EntrySlot_NonConstT",""],["FunctionTypeTraitsHelper_ParameterType",""],["FunctionTypeTraitsHelper_ReturnType",""],["HashTableEntry_NonConstT",""],["HashTable_Entry",""],["HashTable_Key",""],["HashTable_Lookup",""],["HashTable_NonConstT",""],["HashTable_Slot",""],["IntrinsicAddSub_Base",""],["IntrinsicBase_OrderedOp",""],["IntrinsicBase_ValueType",""],["IntrinsicIncDec_Base",""],["IntrinsicMemoryOps_Base",""],["IsDefaultConstructibleImpl_Type",""],["IsDestructibleImpl_Type",""],["IsPackableVariant_Impl",""],["IteratorRange_const_iterator",""],["IteratorRange_const_reverse_iterator",""],["IteratorRange_iterator",""],["IteratorRange_reverse_iterator",""],["LinkedListElementTraits_ClientType",""],["LinkedListElementTraits_ConstClientType",""],["LinkedListElementTraits_ConstRawType",""],["LinkedListElementTraits_RawType",""],["PointerTypeImpl_Type",""],["PointerType_Type",""],["RemovePointerHelper_Type",""],["SelectResultImpl_Type",""],["UniqueSelector_SingleObject",""],["VariantTag_Type",""],["WrapToSignedHelper_SignedType",""],["WrappingAddHelper_UnsignedT",""],["WrappingMultiplyHelper_UnsignedT",""],["WrappingSubtractHelper_UnsignedT",""],["supports_os",""]]});